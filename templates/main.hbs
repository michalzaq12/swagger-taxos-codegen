/* eslint-disable */

{{#each definitions}}
    {{#if tsType.isAtomic}}
        export type {{name}} = {{{tsType.tsType}}}
    {{else}}
        export interface {{{name}}}  {{~> type~}}
    {{/if}}
{{/each}}


{{> httpClient}}

function setParam(distObject : any, key : string, param : any){
    if(param !== undefined) distObject[key] = param;
}

export function createApi(options: IHttpClientOptions): ApiInstance {
    const httpClient = createHttpClient(options);
    return {
        $httpClient: httpClient,
        {{#each methodsByTag}}
            {{@key}} : {
            {{#each this}}
                {{> method}}
            {{/each}}
            },
        {{/each}}
        {{#each globalMethods}}
            {{> method}}
        {{/each}}
    }

}

interface Core {
    $httpClient: {
        request: (config: IApiRequestConfig) => Promise< any >
    }
}


{{#each methodsByTag}}
    interface {{@key}}Resource {
    {{#each this}}
        {{> interface}}
    {{/each}}
    }
{{/each}}


export interface ApiInstance extends Core {
    {{#each methodsByTag}}
        {{@key}} : {{@key}}Resource
    {{/each}}
    {{#each globalMethods}}
        {{> interface}}
    {{/each}}
}

